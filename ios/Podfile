require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, '16.0'
install! 'cocoapods',
  :deterministic_uuids => false

prepare_react_native_project!


target 'jecca' do
  use_expo_modules!
  config = use_native_modules!



  use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']
  use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    # Disable new React Runtime to avoid conflicts
    :fabric_enabled => false,
    :new_arch_enabled => false
  )

  post_install do |installer|
         react_native_post_install(
       installer,
       config[:reactNativePath],
       :mac_catalyst_enabled => false
     )

     # Ensure iOS deployment target is high enough for ExpoModulesCore
     begin
       min_ios = '15.1'
       # Apply to all Pods targets
       installer.pods_project.targets.each do |t|
         t.build_configurations.each do |cfg|
           cfg.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = min_ios
         end
       end
       # Apply to user project targets
       installer.aggregate_targets.map(&:user_project).uniq.each do |project|
         project.build_configurations.each do |cfg|
           cfg.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = min_ios
         end
         project.save
       end
     rescue => e
       Pod::UI.warn("Failed to bump deployment target: #{e}")
     end
 
     # This is necessary for Xcode 14, because it signs resource bundles by default
    # when building for devices.
    installer.target_installation_results.pod_target_installation_results
      .each do |pod_name, target_installation_result|
      target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
        resource_bundle_target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end

    # React Runtime: do not exclude pods on RN 0.77.x
    
        # React Runtime: no extra flags on RN 0.77.x


     # Remove conflicting modulemap files that cause 'Redefinition of module' errors
           # No modulemap stubbing; rely on RN 0.77.x defaults
      begin
        # intentionally left blank
      rescue => e
        Pod::UI.warn("Modulemap cleanup noop: #{e}")
      end
   end
 
   post_integrate do |installer|
    begin
      expo_patch_react_imports!(installer)
    rescue => e
      Pod::UI.warn e
    end
  end
end
